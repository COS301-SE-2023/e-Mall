version: '3'
services:
  app:
    build:
      context: ./app
    ports:
      - "4200:4200"
    volumes:
      - ./app:/app
      - /app/node_modules
  api:
    build:
      context: ./api
    ports:
      - "3000:3000"
    volumes:
      - ./api:/api
    depends_on:
      - dynamodb  
  dynamodb:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - "./api/db:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
    # image:  amazon/dynamodb-local:latest
    # container_name: dynamodb
    # hostname: dynamodb
    # restart: always
    # volumes:
    #   -  ./my-dynamodb-data:/home/dynamodblocal/data
    # # ports:
    #   # - 8001:8001
    # command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data/ -port 8000"
      


# version: "3"

# services:     
#   api:
#     build: 
#       context: /api
#       dockerfile: Dockerfile
#     command: python manage.py runserver 0.0.0.0:8000
#     volumes:
#       - /api:/api
#     ports:
#       - "8000:8000"
#   #   depends_on:
#   #     - db  
#   # db:
#   #   image: amazon/dynamodb-local
#   #   ports:
#   #     - "8001:8001"
#   app:
#     build: 
#       context: /app
#       dockerfile: Dockerfile
#     volumes:
#       - /app:/app
#       - /app/node_modules
#     ports:
#       - "4200:80"
#   # nodejs-server:
#   #   build: ./app
#   #   ports:
#   #     - "3080:3080" 