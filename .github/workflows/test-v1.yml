name: dev-v1

on:
  push:
    branches:
      - "**_test"
      - "**_tests"
      - "**_testing"
env:
  node_version: v18.16.0

jobs:
  usual_branch_test:
    name: Build and Test (Usual task)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "${{ secrets.API_ENV}}" > ./api/api/.env
          echo "${{ secrets.API_ENV_PROD}}" > ./api/api/env.prod
          echo "${{secrets.APP_ENV_TS}}" > ./app/src/environments/env.ts
          echo "${{secrets.APP_ENV_PROD_TS}}" > ./app/src/environments/env.prod.ts

      - name: Check if env files exists
        run: |
          if [ ! -f ./app/src/environments/env.ts ]; then
            echo "app.env not found!"
            exit 1
          fi

          if [ ! -f ./app/src/environments/env.prod.ts ]; then
            echo "app.env.prod not found!"
            exit 1
          fi

          if [ ! -f ./api/api/.env ]; then
            echo "api.env not found!"
            exit 1
          fi

          if [ ! -f ./api/api/env.prod ]; then
            echo "api.env.prod not found!"
            exit 1
          fi

      - name: Get node_modules cache
        uses: actions/cache@v3
        id: node_modules
        with:
          path: |
            **/node_modules
          # Adding node version as cache key
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}-${{ env.node_version }}

      - name: Install dependencies
        if: steps.node_modules.outputs.cache-hit != 'true'
        working-directory: ./app
        run: yarn install --frozen-lockfile

      - name: Start django
        run: chmod +x api/docker-entrypoint.sh && docker-compose up -d &

      - name: Start angular
        working-directory: ./app
        run: yarn ng serve --port 4200 --configuration=development &

      - name: Start cypress test
        working-directory: ./app
        run: |
          yarn cypress install
          echo "[Django] waiting for server..."
          timeout 3m bash -c 'until $(curl --output /dev/null --silent --head --fail http://localhost:3000/admin); do sleep 5; done'
          echo "[Django] server is up!"
          echo "[Angular] waiting for server..."
          timeout 3m bash -c 'until $(curl --output /dev/null --silent --head --fail http://localhost:4200); do sleep 5; done'
          echo "[Angular] server is up!"  
          yarn cypress:run --config video=false

      - name: Frontend unit and integration tests
        working-directory: ./app
        run: yarn ng test --code-coverage --browsers ChromeHeadless

      - name: Backend tests
        working-directory: api
        run: docker-compose exec -T api pytest

      - name: Codecov scan
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
