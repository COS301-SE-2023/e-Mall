name: deploy

# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [JY/194/ssl_configure]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: "Image version"
        required: true
#3
jobs:
  front_build_and_push:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "${{secrets.APP_ENV_PROD_TS}}" > ./app/src/environments/env.prod.ts

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container
        run: doctl registry login --expiry-seconds 600

      - name: Remove old images
        run: if [ ! -z "$(doctl registry repository list | grep "frontend")" ]; then doctl registry repository delete-manifest frontend $(doctl registry repository list-tags frontend) --force; else echo "No repository"; fi

      - name: Build and push
        working-directory: ./app
        run: |
          docker build -f Dockerfile -t frontend .
          docker tag frontend registry.digitalocean.com/e-mall/frontend
          docker push registry.digitalocean.com/e-mall/frontend

  backend_build_and_push:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "${{ secrets.API_ENV_PROD}}" > ./api/api/env.prod

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container
        run: doctl registry login --expiry-seconds 600

      - name: Remove old images
        run: if [ ! -z "$(doctl registry repository list | grep "backend")" ]; then doctl registry repository delete-manifest backend $(doctl registry repository list-tags backend) --force; else echo "No repository"; fi

      - name: Build and push
        working-directory: ./api
        run: |
          docker build -f Dockerfile.prod -t backend .
          docker tag backend registry.digitalocean.com/e-mall/backend
          docker push registry.digitalocean.com/e-mall/backend
