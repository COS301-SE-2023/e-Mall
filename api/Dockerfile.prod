# Use an official Python runtime as the base image
FROM python:3.11.3-slim-bullseye
# Set environment variables
ENV PIP_DISABLE_PIP_VERSION_CHECK 1
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Set the working directory in the container to /api
WORKDIR /api
# install nginx
RUN apt-get update && apt-get install --no-install-recommends nginx -y
COPY ./default.conf /etc/nginx/conf.d/default.conf
RUN ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log

# Copy the requirements.txt file into the container
COPY requirements.txt .


# Install the project's dependencies
# RUN pip install --upgrade pip
RUN pip install -r requirements.txt

# Copy the rest of the project files into the container
COPY . .
#database migration
# RUN sudo apt install build-essential libpq-dev python3-dev
# RUN apt-get install -y python3-psycopg2
RUN rm ./docker-entrypoint.sh && mv ./docker-entrypoint.prod.sh ./docker-entrypoint.sh
RUN chmod +x docker-entrypoint.sh 
ENTRYPOINT ["./docker-entrypoint.sh"]

# Expose port 8000 for the Django development server
# EXPOSE 3000
# RUN python manage.py migrate
# Start the Django development server
# CMD ["python", "manage.py", "runserver", "0.0.0.0:3000"]

